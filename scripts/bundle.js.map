{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/index.js","webpack:///./scripts/kd_node.js","webpack:///./scripts/kd_tree.js","webpack:///./scripts/tree_util.js","webpack:///./scripts/tree_vis.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AAC2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;ACrB6C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./scripts/index.js\");\n","import KDTree from './kd_tree';\nimport KDNode from './kd_node';\nimport TreeVis from './tree_vis';\nimport { inorderTraversal } from './tree_util';\ndocument.addEventListener('DOMContentLoaded', () => {\n  const pointList = [\n    [8,1,1],\n    [6,6,2],\n    [2,6,4],\n    [2,7,1],\n    [9,8,8],\n    [5,7,1],\n    [5,6,3]\n  ];\n  const tree = new KDTree(new KDNode([3,7,1]));\n  tree.buildTree(pointList);\n  const treeVis = new TreeVis(tree);\n  treeVis.drawTree(tree.root);\n  // debugger\n  // inorderTraversal(tree.root);\n\n});\n","import { LEFT_OFFSET, RIGHT_OFFSET, Y_OFFSET } from './tree_vis';\n\nclass KDNode {\n  constructor(data, parent = null, leftChild = null, rightChild = null, dim = 0) {\n    this.data = data;\n    this.parent = parent;\n    this.leftChild = leftChild;\n    this.rightChild = rightChild;\n    this.dim = dim;\n    this.x = 150;\n    this.y = 100;\n  }\n\n  addLeftChild(node) {\n    this.leftChild = node;\n    node.parent = this;\n    node.dim = (this.dim + 1) % 3;\n    node.x = node.parent.x + LEFT_OFFSET;\n    node.y = node.parent.y + Y_OFFSET;\n  }\n\n  addRightChild(node) {\n    this.rightChild = node;\n    node.parent = this;\n    node.dim = (this.dim + 1) % 3;\n    node.x = node.parent.x + RIGHT_OFFSET;\n    node.y = node.parent.y + Y_OFFSET;\n  }\n}\n\nexport default KDNode;\n","import KDNode from './kd_node';\n\nclass KDTree {\n  constructor(root) {\n    this.root = root;\n  }\n\n  buildTree(pointList) {\n    pointList.forEach((point) => {\n      this.assignPoint(point, this.root);\n      // debugger\n    });\n  }\n\n  assignPoint(point, node) {\n    if(point[node.dim] < node.data[node.dim]) {\n      if(node.leftChild === null){\n        node.addLeftChild(new KDNode(point));\n      } else {\n        this.assignPoint(point, node.leftChild);\n      }\n    } else {\n      // debugger\n      if(node.rightChild === null) {\n        node.addRightChild(new KDNode(point));\n      } else {\n        this.assignPoint(point, node.rightChild);\n      }\n    }\n  }\n}\n\nexport default KDTree;\n","export const inorderTraversal = root => {\n\n  if(root.leftChild !== null) {\n    inorderTraversal(root.leftChild);\n  }\n  console.log(root);\n  if(root.rightChild !== null) {\n    inorderTraversal(root.rightChild);\n  }\n  return;\n};\n","export const NODE_RADIUS = 25;\nexport const FULL_CIRCLE = Math.PI * 2;\nexport const LEFT_START = -(NODE_RADIUS/Math.sqrt(2));\nexport const RIGHT_START = (NODE_RADIUS/Math.sqrt(2));\nexport const Y_START = (NODE_RADIUS/Math.sqrt(2));\nexport const LEFT_OFFSET = -40;\nexport const RIGHT_OFFSET = 40;\nexport const Y_OFFSET = 50;\n\n\nclass TreeVis {\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  drawTree(node) {\n    const canvas = document.getElementById(\"treeCanvas\");\n    const ctx = canvas.getContext(\"2d\");\n    // let node = this.tree.root;\n    if(node) {\n      this.drawNode(node, ctx);\n      if(node.leftChild) {\n        this.drawTree(node.leftChild);\n      }\n      if (node.rightChild) {\n        this.drawTree(node.rightChild);\n      }\n    }\n    return ;\n  }\n\n\n\n  drawNode(node, ctx) {\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, NODE_RADIUS, 0, FULL_CIRCLE, true);\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = \"#f7b983\";\n    ctx.fill();\n    ctx.fillStyle = \"#050200\";\n    ctx.fillText(node.data.join(','), node.x, node.y);\n    ctx.stroke();\n    this.drawChildrenPath(node, ctx);\n  }\n\n  drawChildrenPath(node, ctx) {\n    if(node.leftChild !== null) {\n      ctx.beginPath();\n      ctx.moveTo(node.x + LEFT_START, node.y + Y_START);\n      ctx.lineTo(node.x+ LEFT_OFFSET, node.y + Y_OFFSET);\n      ctx.stroke();\n    }\n    if(node.rightChild !== null) {\n      ctx.beginPath();\n      ctx.moveTo(node.x+ RIGHT_START, node.y + Y_START);\n      ctx.lineTo(node.x+ RIGHT_OFFSET, node.y + Y_OFFSET);\n      ctx.stroke();\n    }\n  }\n}\n\nexport default TreeVis;\n"],"sourceRoot":""}